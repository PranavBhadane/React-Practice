{"ast":null,"code":"var _jsxFileName = \"D:\\\\Seed\\\\React\\\\React-Practice\\\\demo_1\\\\src\\\\Function\\\\ConditionalOne.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CondtionalOne = props => {\n  const ans = props.favlang;\n  let x = props.num;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: ans == \"Python\" ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Favourite Language -\", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Favourite Language-\", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Using Logical Operators &&\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [x % 2 == 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [x, \" is even\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 30\n        }, this), x % 2 !== 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [x, \" is odd\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n  }, void 0, true);\n};\n_c = CondtionalOne;\nvar _c;\n$RefreshReg$(_c, \"CondtionalOne\");","map":{"version":3,"names":["CondtionalOne","props","ans","favlang","x","num","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Seed/React/React-Practice/demo_1/src/Function/ConditionalOne.js"],"sourcesContent":["export const CondtionalOne = (props) =>\r\n{\r\n    const ans= props.favlang;\r\n    let x=props.num\r\n    return(\r\n        <>\r\n        <div>\r\n            {\r\n                (ans==\"Python\")? (<h2>Favourite Language -{ans}</h2>) : (<h2>Favourite Language-{ans}</h2>)\r\n            }\r\n        </div>\r\n        <div>\r\n            <h3>Using Logical Operators &&</h3>\r\n            <div>\r\n                {(x%2==0) && <h3>{x} is even</h3>}\r\n                {(x%2!==0) && <h3>{x} is odd</h3>}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAO,MAAMA,aAAa,GAAIC,KAAK,IACnC;EACI,MAAMC,GAAG,GAAED,KAAK,CAACE,OAAO;EACxB,IAAIC,CAAC,GAACH,KAAK,CAACI,GAAG;EACf,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACAF,OAAA;MAAAE,QAAA,EAESN,GAAG,IAAE,QAAQ,gBAAII,OAAA;QAAAE,QAAA,GAAI,sBAAoB,EAACN,GAAG;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAAKN,OAAA;QAAAE,QAAA,GAAI,qBAAmB,EAACN,GAAG;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9F,CAAC,eACNN,OAAA;MAAAE,QAAA,gBACIF,OAAA;QAAAE,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCN,OAAA;QAAAE,QAAA,GACMJ,CAAC,GAAC,CAAC,IAAE,CAAC,iBAAKE,OAAA;UAAAE,QAAA,GAAKJ,CAAC,EAAC,UAAQ;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC/BR,CAAC,GAAC,CAAC,KAAG,CAAC,iBAAKE,OAAA;UAAAE,QAAA,GAAKJ,CAAC,EAAC,SAAO;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,wBACN;EAAA,eAAE,CAAC;AAEX,CAAC;AAAAC,EAAA,GApBYb,aAAa;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}